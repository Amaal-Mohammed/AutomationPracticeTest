{
  "stats": {
    "suites": 1,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2021-11-10T05:33:08.800Z",
    "end": "2021-11-10T05:34:42.963Z",
    "duration": 94163,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3f3bad50-8759-404c-8b6a-4448aa73a599",
      "title": "",
      "fullFile": "cypress/integration/register/register.spec.js",
      "file": "cypress/integration/register/register.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c7e59b7b-0135-491b-baee-154c551b1692",
          "title": "Register Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify User is able to register when adding all mandatory fields",
              "fullTitle": "Register Tests Verify User is able to register when adding all mandatory fields",
              "timedOut": null,
              "duration": 21047,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firstname = faker.name.firstName();\nlastname = faker.name.lastName();\n_home.default.clickSignInBtn();\n_signin.default.createEmailToRegister(faker.internet.email());\n_signin.default.clickCreateAccountBtn();\n_registeraccount.default.insertCustomerFirstName(firstname);\n_registeraccount.default.insertCustomerLastName(lastname);\n_registeraccount.default.insertCustometPassword(faker.internet.password());\n_registeraccount.default.selectDayMonthYear(_helpers.default.generateRandomDay, faker.date.month(), _helpers.default.generateRandomYear);\n_registeraccount.default.insertFirstName(firstname);\n_registeraccount.default.insertLastName(lastname);\n_registeraccount.default.insertAddress1(faker.address.streetName());\n_registeraccount.default.insertCity(faker.address.city());\n_registeraccount.default.insertState(faker.address.state());\n_registeraccount.default.insertZipCode(_helpers.default.zipcode);\n_registeraccount.default.insertMobilePhone(_helpers.default.generateRandomMobileNum);\n_registeraccount.default.insertAlias(firstname);\n_registeraccount.default.clickSubmitAccount();\n_myaccount.default.verifyUserisRegistered(firstname, lastname);",
              "err": {},
              "uuid": "bfefd582-0949-4fb7-9f06-fec513185066",
              "parentUUID": "c7e59b7b-0135-491b-baee-154c551b1692",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify User is not able to register when non of mandatory fields are added",
              "fullTitle": "Register Tests Verify User is not able to register when non of mandatory fields are added",
              "timedOut": null,
              "duration": 10126,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firstname = faker.name.firstName();\nlastname = faker.name.lastName();\n_home.default.clickSignInBtn();\n_signin.default.createEmailToRegister(faker.internet.email());\n_signin.default.clickCreateAccountBtn();\n_registeraccount.default.clickSubmitAccount();\n_registeraccount.default.verifyValidationMsgIsDisplayed();",
              "err": {},
              "uuid": "a2ea679b-7cc0-4264-8f5c-9722a0884e50",
              "parentUUID": "c7e59b7b-0135-491b-baee-154c551b1692",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify User is not able to register when an password less than 5 characters",
              "fullTitle": "Register Tests Verify User is not able to register when an password less than 5 characters",
              "timedOut": null,
              "duration": 14810,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firstname = faker.name.firstName();\nlastname = faker.name.lastName();\n_home.default.clickSignInBtn();\n_signin.default.createEmailToRegister(faker.internet.email());\n_signin.default.clickCreateAccountBtn();\n_registeraccount.default.insertCustomerFirstName(firstname);\n_registeraccount.default.insertCustomerLastName(lastname);\ncy.fixture(\"register.json\", \"binary\").then(data => {\n  _registeraccount.default.insertCustometPassword(data.invalidpassword);\n});\n_registeraccount.default.selectDayMonthYear(_helpers.default.generateRandomDay, faker.date.month(), _helpers.default.generateRandomYear);\n_registeraccount.default.insertFirstName(firstname);\n_registeraccount.default.insertLastName(lastname);\n_registeraccount.default.insertAddress1(faker.address.streetName());\n_registeraccount.default.insertCity(faker.address.city());\n_registeraccount.default.insertState(faker.address.state());\n_registeraccount.default.insertZipCode(_helpers.default.zipcode);\n_registeraccount.default.insertMobilePhone(_helpers.default.generateRandomMobileNum);\n_registeraccount.default.insertAlias(firstname);\n_registeraccount.default.clickSubmitAccount();\n_registeraccount.default.verifyPasswordValidationMsgIsDisplayed();",
              "err": {},
              "uuid": "b81368a1-2edb-4d39-bf46-da946e08d9c2",
              "parentUUID": "c7e59b7b-0135-491b-baee-154c551b1692",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify User is not able to register when phone is invalid format",
              "fullTitle": "Register Tests Verify User is not able to register when phone is invalid format",
              "timedOut": null,
              "duration": 14610,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firstname = faker.name.firstName();\nlastname = faker.name.lastName();\n_home.default.clickSignInBtn();\n_signin.default.createEmailToRegister(faker.internet.email());\n_signin.default.clickCreateAccountBtn();\n_registeraccount.default.insertCustomerFirstName(firstname);\n_registeraccount.default.insertCustomerLastName(lastname);\n_registeraccount.default.insertCustometPassword(faker.internet.password());\n_registeraccount.default.selectDayMonthYear(_helpers.default.generateRandomDay, faker.date.month(), _helpers.default.generateRandomYear);\n_registeraccount.default.insertFirstName(firstname);\n_registeraccount.default.insertLastName(lastname);\n_registeraccount.default.insertAddress1(faker.address.streetName());\n_registeraccount.default.insertCity(faker.address.city());\n_registeraccount.default.insertState(faker.address.state());\n_registeraccount.default.insertZipCode(_helpers.default.zipcode);\ncy.fixture(\"register.json\", \"binary\").then(data => {\n  _registeraccount.default.insertMobilePhone(data.invalidmobilephone);\n});\n_registeraccount.default.insertAlias(firstname);\n_registeraccount.default.clickSubmitAccount();\n_registeraccount.default.verifyMobileValidationMsgIsDisplayed();",
              "err": {},
              "uuid": "9ff6e2e5-5dc5-4204-8c12-726fbd07422c",
              "parentUUID": "c7e59b7b-0135-491b-baee-154c551b1692",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify User is not able to register when zipcode is invalid format",
              "fullTitle": "Register Tests Verify User is not able to register when zipcode is invalid format",
              "timedOut": null,
              "duration": 15147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firstname = faker.name.firstName();\nlastname = faker.name.lastName();\n_home.default.clickSignInBtn();\n_signin.default.createEmailToRegister(faker.internet.email());\n_signin.default.clickCreateAccountBtn();\n_registeraccount.default.insertCustomerFirstName(firstname);\n_registeraccount.default.insertCustomerLastName(lastname);\n_registeraccount.default.insertCustometPassword(faker.internet.password());\n_registeraccount.default.selectDayMonthYear(_helpers.default.generateRandomDay, faker.date.month(), _helpers.default.generateRandomYear);\n_registeraccount.default.insertFirstName(firstname);\n_registeraccount.default.insertLastName(lastname);\n_registeraccount.default.insertAddress1(faker.address.streetName());\n_registeraccount.default.insertCity(faker.address.city());\n_registeraccount.default.insertState(faker.address.state());\ncy.fixture(\"register.json\", \"binary\").then(data => {\n  _registeraccount.default.insertZipCode(data.invalidzipcode);\n});\n_registeraccount.default.insertMobilePhone(_helpers.default.generateRandomMobileNum);\n_registeraccount.default.insertAlias(firstname);\n_registeraccount.default.clickSubmitAccount();\n_registeraccount.default.verifyZipCodeValidationMsgIsDisplayed();",
              "err": {},
              "uuid": "1208bbdd-8f7b-40be-a13a-0536b414d6d5",
              "parentUUID": "c7e59b7b-0135-491b-baee-154c551b1692",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify User is not able to register with same email twice",
              "fullTitle": "Register Tests Verify User is not able to register with same email twice",
              "timedOut": null,
              "duration": 5426,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_home.default.clickSignInBtn();\ncy.fixture(\"register.json\", \"binary\").then(data => {\n  _signin.default.createEmailToRegister(data.registeredemail);\n});\n_signin.default.clickCreateAccountBtn();\n_registeraccount.default.verifyDuplicateAccountRegisteration();",
              "err": {},
              "uuid": "847e6eec-8119-47e6-94f4-7a024cd43243",
              "parentUUID": "c7e59b7b-0135-491b-baee-154c551b1692",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify User is not able to register with invalid email ",
              "fullTitle": "Register Tests Verify User is not able to register with invalid email ",
              "timedOut": null,
              "duration": 5542,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_home.default.clickSignInBtn();\ncy.fixture(\"register.json\", \"binary\").then(data => {\n  _signin.default.createEmailToRegister(data.invalidemail);\n});\n_signin.default.clickCreateAccountBtn();\n_registeraccount.default.verifyInvalidEmailAddress();",
              "err": {},
              "uuid": "6e0e0658-5ff7-4663-9d67-777c65359e4e",
              "parentUUID": "c7e59b7b-0135-491b-baee-154c551b1692",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify illustrative labels are displayed in the Registeration page ",
              "fullTitle": "Register Tests Verify illustrative labels are displayed in the Registeration page ",
              "timedOut": null,
              "duration": 7230,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firstname = faker.name.firstName();\nlastname = faker.name.lastName();\n_home.default.clickSignInBtn();\n_signin.default.createEmailToRegister(faker.internet.email());\n_signin.default.clickCreateAccountBtn();\n_registeraccount.default.verifyDescriptiveLabelsISDisplayed();",
              "err": {},
              "uuid": "6f11afdb-4453-44a6-9ac8-23adceb9dae8",
              "parentUUID": "c7e59b7b-0135-491b-baee-154c551b1692",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bfefd582-0949-4fb7-9f06-fec513185066",
            "a2ea679b-7cc0-4264-8f5c-9722a0884e50",
            "b81368a1-2edb-4d39-bf46-da946e08d9c2",
            "9ff6e2e5-5dc5-4204-8c12-726fbd07422c",
            "1208bbdd-8f7b-40be-a13a-0536b414d6d5",
            "847e6eec-8119-47e6-94f4-7a024cd43243",
            "6e0e0658-5ff7-4663-9d67-777c65359e4e",
            "6f11afdb-4453-44a6-9ac8-23adceb9dae8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 93938,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}